--// Services
local TweenService        = game:GetService("TweenService")
local Players             = game:GetService("Players")
local ReplicatedStorage   = game:GetService("ReplicatedStorage") -- kept if you need it elsewhere

--// UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Lawrencepanlilio/bee-swarm/refs/heads/main/BEE%20SWARM"))()
assert(Library and typeof(Library.CreateLibrary)=="function","UI Library failed to load")

--// Window + Tabs
local Lib = Library.CreateLibrary("MAPLEHUB", "By Lorenz pogi")
pcall(function()
    Library.CreateFloatingIcon(Lib._mainFrame, "rbxassetid://125161562555332", 48)
end)

local Tab1 = Lib:AddTab("Home")
Lib:AddTab("Main")
Lib:AddTab("Storage")
Lib:AddTab("Others")

--// Player / Character
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
player.CharacterAdded:Connect(function(c) character = c end)

--// Field Positions
local FIELD_NAMES = {
    ["Sunflower Field"]        = CFrame.new(-208.951294, 1.5, 176.579224),
    ["Dandelion Field"]        = CFrame.new(-29.6986389, 1.5, 221.572845),
    ["Mushroom Field"]         = CFrame.new(-89.7000122, 1.95073581, 111.725006),
    ["Blue Flower Field"]      = CFrame.new(146.865021, 2.13494039, 99.3078308),
    ["Clover Field"]           = CFrame.new(157.547073, 31.608448, 196.350006),
    ["Strawberry Field"]       = CFrame.new(-178.174973, 18.1322384, -9.8549881),
    ["Spider Field"]           = CFrame.new(-43.4654312, 18.1220875, -13.5899963),
    ["Bamboo Field"]           = CFrame.new(132.963409, 18.1719551, -25.6000061),
    ["Pineapple Patch Field"]  = CFrame.new(256.498108, 66.1299973, -207.479324),
    ["Stump Field"]            = CFrame.new(424.483276, 94.4255676, -174.810959),
    ["Cactus Field"]           = CFrame.new(-188.5, 65.5000153, -101.595818),
    ["Pumpkin Patch Field"]    = CFrame.new(-188.5, 65.5000153, -183.845093),
    ["Pine Tree Forest Field"] = CFrame.new(-328.670013, 65.5, -187.348999),
    ["Rose Field"]             = CFrame.new(-327.459839, 17.5552464, 129.496735),
    ["Mountain Top Field"]     = CFrame.new(77.6849823, 173.500015, -165.431),
    ["Pepper Patch Field"]     = CFrame.new(-488.761566, 120.701508, 535.680176),
    ["Coconut Field"]          = CFrame.new(-254.478104, 68.9707947, 469.459045),
}

--// Helpers
local function keysSorted(t)
    local out = {}
    for k in pairs(t) do table.insert(out, k) end
    table.sort(out)
    return out
end

local FieldOptions = keysSorted(FIELD_NAMES)
getgenv().SelectedField = getgenv().SelectedField or FieldOptions[1]
getgenv().AutoTween = false

--// UI Controls
local FieldDropdown = Tab1:AddDropdown("Pick Field", FieldOptions)
if FieldDropdown and typeof(FieldDropdown.SetValue) == "function" then
    FieldDropdown:SetValue(getgenv().SelectedField)
end
if FieldDropdown and FieldDropdown.OnChanged then
    FieldDropdown.OnChanged:Connect(function(val)
        if typeof(val) == "table" then val = val[1] end
        getgenv().SelectedField = val
    end)
end

--// Teleport logic (instant instead of tween)
local function teleportToSelectedField()
    local selected = getgenv().SelectedField
    local targetCF = selected and FIELD_NAMES[selected]
    if not targetCF then
        warn("[Teleport] Invalid selection.")
        return
    end

    local char = character
    if not char then return end

    local hrp = char:FindFirstChild("HumanoidRootPart") or char:WaitForChild("HumanoidRootPart", 5)
    if not hrp then
        warn("[Teleport] HumanoidRootPart not found.")
        return
    end

    -- Optional: turn off AutoRotate briefly
    local hum = char:FindFirstChildOfClass("Humanoid")
    local oldAutoRotate
    if hum then oldAutoRotate = hum.AutoRotate; hum.AutoRotate = false end

    -- Instantly teleport
    hrp.CFrame = targetCF

    -- Restore AutoRotate
    if hum then hum.AutoRotate = oldAutoRotate end
end

--// Toggle
local AutoToggle = Tab1:AddToggle("Enable AutoTeleport", false, function(v)
    getgenv().AutoTween = v
    if v then
        teleportToSelectedField()
    end
end)
if AutoToggle and typeof(AutoToggle.SetState) == "function" then
    AutoToggle:SetState(getgenv().AutoTween)
end

-- Re-teleport after respawn if still enabled
player.CharacterAdded:Connect(function(c)
    character = c
    if getgenv().AutoTween then
        task.defer(teleportToSelectedField)
    end
end)
